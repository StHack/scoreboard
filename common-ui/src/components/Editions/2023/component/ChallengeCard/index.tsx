import { keyframes, useTheme } from '@emotion/react'
import styled from '@emotion/styled'
import { size, SizeProps, space, SpaceProps } from 'styled-system'
import { categoryToImg } from '../../../../CategoryImg'
import { ChallengeCardProps } from '../../../types'

export function ChallengeCard2023({
  challenge,
  currentTeam,
  score: { score, achievements },
  onClick,
  ...props
}: ChallengeCardProps) {
  const { name, img, category, isBroken } = challenge
  const isSolved = achievements.some(a => a.teamname === currentTeam)
  const openState: ChallState = isBroken ? 'broken' : 'open'

  const theme = useTheme()

  return (
    <CardWrapper
      m="2"
      {...props}
      onClick={onClick}
      type="button"
      title={
        isBroken
          ? 'This challenge is currently broken'
          : isSolved
            ? `âœ” Open challenge "${name}"`
            : `Open challenge "${name}"`
      }
    >
      <Bird viewBox="0 0 1000 1000" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <clipPath id="bird-shape" clipPathUnits="objectBoundingBox">
            <path
              fill="#9c9b9bff"
              d="M 0.78755393,0.05613637 C 0.75619881,0.05487788 0.74271765,0.10567746 0.67546703,0.19090868 0.6082171,0.27614065 0.53115276,0.29171135 0.50842036,0.28936011 0.48907944,0.28735914 0.46919855,0.26139944 0.46341009,0.25332498 0.38933899,0.09943072 0.28708601,0.08389453 0.28708601,0.08389453 c 0,0 0.0101399,-0.005004 0.0132164,-0.0087442 0.003075,-0.0037402 -9.7124e-4,-0.0070469 -0.0106222,7.06e-5 -0.009652,0.0071175 -0.00885,0.0041737 -0.00885,0.0041737 0.002147,-0.0091327 -4.8298e-4,-0.01449369 -0.005419,-0.01259695 -0.004937,0.0018975 -2.1009e-4,0.01229021 4.19e-5,0.0139672 2.5034e-4,0.001677 -0.002191,0.0013327 -0.002191,0.0013327 0,0 -0.0334499,-0.01226471 -0.0668486,0.01876343 -0.0270479,0.0251272 -0.0211619,0.0741043 0.0120547,0.0982399 -0.001751,0.001519 -0.002465,0.004287 0.004418,0.008772 -0.001459,0.003297 -0.005034,0.0146654 0.0081,0.0268326 l 0.0236954,-0.0206662 -3.413e-4,0.0156367 0.009372,-0.0128145 c 0.0421933,0.0178627 0.0539472,0.0598498 0.0539472,0.0598498 -0.009894,-0.001482 -0.0132524,-0.005038 -0.0137924,-7.3798e-4 -5.3773e-4,0.0043 0.0130117,0.00373 0.0131654,0.003607 1.5457e-4,-1.2083e-4 -0.004969,0.003796 -0.007462,0.006931 -0.002494,0.003136 1.6783e-4,0.009785 0.001964,0.0115762 0.001796,0.001791 0.009007,-0.007735 0.0112612,-0.00718 0.002255,5.5425e-4 8.8124e-4,0.0188459 8.8124e-4,0.0188459 a 0.00641097,0.00641098 0 0 0 9.2698e-4,2.3847e-4 c -0.00229,0.008649 -0.005543,0.0202582 -0.00973,0.0332849 -0.008645,0.0269047 -0.0682916,0.075197 -0.0682916,0.075197 -0.0205687,-0.00591 -0.0351553,0.001657 -0.0356833,0.005385 -5.2727e-4,0.003727 0.00696,0.003557 0.0116369,0.004041 0.004678,4.8376e-4 0.004512,0.005752 0.004512,0.005752 l -0.0116174,0.0141239 c -0.0961728,0.12771936 -0.0399853,0.21598355 0.0312553,0.2950873 0.0712414,0.0791037 0.24280824,0.10239713 0.30540141,0.11152012 0.0625955,0.009123 0.14241372,0.00921 0.14575276,-0.001375 0.003236,-0.0102547 -0.014451,-0.0266451 -0.0645821,-0.0410976 -0.0501298,-0.014451 -0.0421371,-0.0204329 -0.0421371,-0.0204329 0.0421625,-0.003581 0.14837851,-0.0468659 0.15199194,-0.0689961 0.003613,-0.0221294 -0.0631805,-0.009184 -0.0836508,-0.008039 -0.0204704,0.001144 -0.0541594,0.002103 -0.0551397,-0.001213 -9.8176e-4,-0.003317 0.003664,-0.004348 0.003664,-0.004348 0.0506847,-0.0165037 0.0843693,-0.0423299 0.0759753,-0.0562476 -0.008392,-0.0139162 -0.0237681,-5.6698e-4 -0.0913757,3.8157e-4 -0.0676092,9.4801e-4 -0.0770794,-0.009865 -0.0787309,-0.014007 -0.001652,-0.004142 0.004167,-0.00373 0.004167,-0.00373 0.12776481,-0.006639 0.26593432,-0.09191 0.31125436,-0.12693332 0.0453208,-0.0350241 0.0619369,-0.0996799 0.0517662,-0.10555468 -0.0101722,-0.005874 -0.0420215,0.0223169 -0.0420215,0.0223169 0,0 -0.0499655,0.0305721 -0.0510005,0.0213884 -0.001036,-0.009184 0.004944,-0.009416 0.004944,-0.009416 0.0835766,-0.0401436 0.11801942,-0.2113141 0.0900895,-0.22101083 -0.0279299,-0.009697 -0.11113815,0.10366767 -0.11113815,0.10366767 0,0 -0.01113,0.0116137 -0.0147674,0.0084 -0.00364,-0.003212 0.00297,-0.006784 0.00297,-0.006784 0.0417981,-0.0393599 0.0587922,-0.26396015 0.0274364,-0.26521789 z M 0.26948208,0.11095444 c 6.0152e-4,0 0.001208,3.25e-5 0.001819,9.6e-5 0.00977,0.00101 0.0168719,0.009751 0.0158609,0.0195217 -0.001011,0.00977 -0.00975,0.0168712 -0.0195209,0.0158602 -0.009771,-0.001011 -0.0168719,-0.009751 -0.0158624,-0.0195209 9.4876e-4,-0.00916 0.008689,-0.0159742 0.0177034,-0.015957 z"
            />
          </clipPath>
          <clipPath id="broken-egg-shape" clipPathUnits="objectBoundingBox">
            <path
              fill="#ffb882ff"
              d="m 0.50000107,0.06544224 c -0.0370223,0 -0.0713081,0.0120014 -0.10256185,0.0321021 L 0.5231851,0.29126132 c 0.00532,0.009578 0.004203,0.0214408 -0.00281,0.0298581 L 0.4450772,0.41147692 0.521581,0.51858268 c 0.008514,0.0119195 0.005753,0.0284845 -0.006166,0.0369983 -0.0119191,0.008513 -0.0284826,0.005752 -0.0369963,-0.006166 L 0.3900109,0.42564549 c -0.00701,-0.009817 -0.006514,-0.023127 0.001208,-0.0323943 L 0.4679859,0.30112829 0.35588647,0.13053732 c -0.0299117,0.028307 -0.0563216,0.0635802 -0.0787561,0.10151127 -0.0535898,0.0906064 -0.0865553,0.19898124 -0.0865553,0.28426924 0,0.17057665 0.13884995,0.3094238 0.30942607,0.3094238 0.17057654,0 0.30942394,-0.13884724 0.30942394,-0.3094238 0,-0.085288 -0.0329636,-0.1936628 -0.0865533,-0.28426924 C 0.66928217,0.14144224 0.59329314,0.06544224 0.50000107,0.06544224 Z"
            />
          </clipPath>
          <path
            id="feather-line"
            d="M792.98 828.355c67.12-8.44 93.434-37.642 190.273-150.342"
            fill="none"
            stroke="none"
          />
          <path
            id="chall-name-line"
            d="M125.826 680.674s277.424 182.675 625.34-24.256M111.424 764.81s264.538 190.255 644.29-22.74"
            fill="none"
            stroke="none"
          />
        </defs>

        <path
          // id="nest-back"
          d="M894.189 591.859c4.698-12.952 7.9-27.186 9.331-43.083.308-3.373-.789-5.77-2.528-7.437-1.907-9.838-15.398-13.862-23.747-9.543-13.74 7.1-26.294 14.88-38.611 23.262-1.927-39.99-7.979-76.443-29.036-113.473-6.639-11.67-21.67-7.393-26 3.397-4.107 7.653-8.839 14.802-14.08 21.537-4.833-18.352-13.202-33.491-26.937-48.865 6.332-23.405 12.37-55.265-3.94-74.083-18.708-21.58-51.919-16.958-78.471-11.736-5.131-10.67-10.623-20.972-13.914-32.622-1.984-7-9.677-13.235-17.253-12.42a12.19 12.19 0 00-3.22.799c-28.575 11.386-65.07 48.11-77.243 75.667-35.112-25.192-76.53-43.115-111.821-43.338-47.1.509-84.88 18.01-119.71 45.648-.1-10.3-.158-20.572.942-31.146 1.105-10.666-11.8-15.41-19.803-11.366-36.93 18.655-54.336 51.395-79.951 82.237-28.316 34.09-96.88 17.314-136.096 35.536-7.994 3.714-9.527 16.787-2.888 22.422 11.583 9.83 22.85 18.711 34.768 27.008C63.63 509.5 19.214 545.163 3.654 598.474c-3.363 11.511 7.974 22.858 19.49 19.49 10.886-3.185 21.623-5.62 32.432-7.705l33.826 21.4c21.075-2.503 70.979-17.135 62.21-1.006-12.524 23.032 33.998 42.37 33.998 42.37l.38-.092c.598.225 1.166.48 1.883.589 35.344 5.304 66.764 13.235 99.73 27.129 5.717 2.412 14.306-1.452 16.9-6.88 2.475-5.184 4.305-9.085 5.866-12.572 8.859 9.79 18.045 19.231 27.293 29.315 6.014 6.558 16.035 5.505 22.19 0 25.327-22.661 51.367-41.528 79.966-57.876-2.137 7.638-4.075 15.623-5.987 24.563-1.162 5.415 1.585 11.324 5.895 14.648.057 1.062.033 2.097.11 3.168.807 11.953 15.493 19.979 24.698 10.231 22.791-24.126 47.36-34.594 76.387-42.94.644 6.654 1.748 12.468 4.189 23.58 1.936 8.86 14.734 15.043 22.455 9.129 33.134-25.373 66.02-47.589 104.888-56.131.674 5.768 1.76 11.452 3.913 21.252 1.936 8.859 14.734 15.042 22.455 9.128 45.346-34.724 90.173-63.656 150.6-59.51 2.229.152 4.23-.215 5.998-.96 14.86-3.378 28.56-7.157 38.77-16.935z"
          fill="#520"
        />

        {!isSolved && (
          <g>
            <Image
              // id="chall-image-bg"
              {...ImageDefaultProps}
              as="rect"
              fill="#9c9b9bff"
              openState={openState}
            />
            <Image
              // id="chall-image"
              {...ImageDefaultProps}
              href={img || categoryToImg(category)}
              preserveAspectRatio="xMidYMid slice"
              openState={openState}
            />
          </g>
        )}

        {isSolved && (
          <Flower>
            <path
              fill="none"
              stroke="#2c3e50"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeMiterlimit="10"
              strokeWidth="40.204"
              d="M-886.12 515.67v160.704M-985.71 499.827s49.795 18.107 99.59 18.107 99.59-13.58 99.59-13.58"
              transform="matrix(.88916 0 0 .88916 1293.944 105.792)"
            />
            <path
              d="M-422.118 382.129c-52.059 38.478-174.284 27.16-242.186 83.746-31.688 24.898-47.532 58.849-49.796 124.488 0 11.317-2.263 15.844 9.054 15.844 90.537 2.264 144.86-4.527 185.6-29.424 61.113-38.478 86.01-133.542 97.328-194.654zM-1363.703 382.129c52.06 38.478 174.284 27.16 242.187 83.746 31.688 24.898 47.532 58.849 49.795 124.488 0 11.317 2.263 15.844-9.053 15.844-90.538 2.264-144.86-4.527-185.601-29.424-61.113-38.478-86.01-133.542-97.327-194.654z"
              fill="#7abe90"
              stroke="#2c3e50"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeMiterlimit="10"
              strokeWidth="40.204"
              transform="matrix(.88916 0 0 .88916 1293.944 105.792)"
            />
            <path
              d="M684.431 30.37a104.22 104.22 0 00-30.101-16.256l-3.967-1.477-4.122-.699A981.428 981.428 0 00500.169.038 792.224 792.224 0 00354.098 12.17h-1.48l-1.71.468a89.919 89.919 0 00-35.234 18.512 74.048 74.048 0 00-23.334 39.356c-8.245 36.557-9.956 86.103-10.19 134.482a697.792 697.792 0 009.878 131.605 78.714 78.714 0 0014.157 33.6 586.844 586.844 0 0068.213 75.214 484.114 484.114 0 0086.18 63.39 82.603 82.603 0 0040.135 11.59 88.035 88.035 0 0038.89-10.578c34.768-17.578 64.636-45.968 91.004-69.224a494.692 494.692 0 0058.568-60.436l-72.18-55.068a427.8 427.8 0 01-47.135 47.913c-24.5 22.478-53.202 46.668-68.913 54.446a417.063 417.063 0 01-66.036-49.624 494.308 494.308 0 01-53.824-58.88 617.025 617.025 0 01-7.778-113.714c-.52-35.1 1.48-70.191 5.989-105.004a757.33 757.33 0 01121.104-9.1 864.154 864.154 0 0191.314 5.367c12.212 1.322 22.246 2.645 29.246 3.656h2.1a532.937 532.937 0 014.356 55.846l90.77-3.034a480.403 480.403 0 00-8.712-82.291 72.103 72.103 0 00-25.046-40.29"
              fill="#2c3e50"
            />
            <path
              d="M604.94 158.474V145.02L500.09 249.789V238.51L603.54 135.063v-.7l-.467-1.478-.467-1.322-.778-1.634-.544-1.09a18.745 18.745 0 00-1.09-1.555l-.7-.778-99.403 98.47v-11.201l91.159-91.158c-3.5-.778-7.778-1.4-7.778-1.4l-4.2-.468-79.18 79.491v-11.2l69.38-69.302-4.979-.544-7.778-.623-56.935 56.935v-11.278l46.668-46.668-12.834-.7-33.6 33.602v-10.967l22.79-22.79h-13.224l-9.566 9.567v-9.566h-8.867c-22.012 0-40.99 1.479-55.38 2.8-6.3.622-12.834 1.245-19.29 2.022a99.326 99.325 0 00-10.578 2.178 11.978 11.978 0 00-2.722 1.167l-.623.544a9.956 9.956 0 00-1.555 1.322l-.623.777a15.556 15.556 0 00-1.088 1.556l-.933.856-.778 1.634c0 .468 0 .856-.467 1.322l-.468 1.477c0 .544 0 1.088-.467 1.634v3.111a4.511 4.511 0 000 .544v10.578a10.034 10.034 0 000 1.245v134.483a65.18 65.18 0 009.8 26.523 408.814 408.813 0 0056.935 60.901l4.512 3.578 1.011.778c2.256 1.634 4.434 3.189 6.69 4.589l3.033 1.867 2.8 1.555q2.489 1.322 4.9 2.333l1.556.623a39.98 39.979 0 005.055 1.634h1.556a29.79 29.79 0 005.6.623v-4.512L604.937 282.3v-13.533L500.089 373.38v-11.045L604.937 257.49v-13.534L500.089 348.802v-11.2l104.848-104.848V219.22L500.089 324.068V312.79l104.848-104.77v-13.534l-104.848 104.77v-11.434l104.848-104.614v-13.534L500.089 274.52v-11.2zm-2.1 137.127l-94.893 94.892a38.035 38.035 0 004.745-1.48l1.555-.622q2.412-1.011 4.9-2.333l2.8-1.555 3.034-1.867c2.178-1.4 4.434-2.956 6.69-4.59l1.01-.777 4.59-3.578 5.755-4.822 31.113-31.112c12.6-14.078 21.311-25.59 21.311-25.59a52.268 52.268 0 007.778-16.878"
              fill="#e64c3c"
            />
          </Flower>
        )}

        <path
          // id="nest-front"
          d="M797.26 571.458l-17.798 1.703c-22.622 8.21-44.735 24.656-64.211 40.874.788-3.905 1.268-7.846 2.382-11.713 2.287-8.35-4.457-19.553-14.065-18.458-14.49 1.648-27.667 4.825-40.378 8.687l-23.946 8.767c-1.41.616-2.452 1.613-3.195 2.861-18.339 8.939-36.088 22.31-52.054 35.607.788-3.906 1.268-7.847 2.382-11.714 2.287-8.35-4.457-19.553-14.065-18.457-14.49 1.647-27.669 4.824-40.38 8.687l-23.944 8.766c-13.226 5.785-26 12.472-38.466 20.644 4.684-11.381 10.71-22.302 18.15-32.741 7.101-8.994 3.223-23.044-9.637-23.26-56.382-.942-98.976 23.318-130.967 65.897-8.816-14.12-18.419-27.744-23.867-43.8-3.819-11.256-22.32-16.915-28.152-3.68-4.002 9.076-7.644 16.36-10.838 23.302l-17.973 11.063c-9.545-1.282-17.797-2.64-24.97-4.059-5.234-1.33-10.355-2.594-15.4-3.562-57.726-15.864-8.159-37.266-43.417-48.576-18.802-6.031-39.997-5.193-57.78-2.87-13.485 2.664-65.249 12.22-69.095 24.833C31.137 655.576 10.652 700.965.29 752.677c-2.354 11.732 10.074 24.464 21.7 16.686 20.984-14.038 40.1-24.65 61.935-33.648-19.044 62.579-15.57 133.935 34.254 181.102 9.018 8.542 20.952 3.67 25.285-6.673 10.714-25.591 19.457-47.33 34.623-68.07 12.933 29.104 20.759 58.265 27.917 90.232 2.19 9.786 14.825 14.705 23.19 9.43 30.17-19 52.236-41.503 69.814-69.848 29.983 46.38 97.419 59.096 150.894 52.995 4.842-.548 8.34-2.662 10.646-5.458 7.163-4.535 8.758-15.805 2.59-22.655a126795.75 126795.75 0 00-5.656-38.885c19.788 19.591 34.648 42.444 46.177 68.56 3.176 7.196 13.174 8.436 19.343 5.078 22.896-12.506 38.659-33.587 46.096-57.632 54.964 30.708 131.878 23.963 189.081 5.817 12.971-4.112 16.694-19.104 9.195-28.77 10.165 12.01 19.005 25.697 29.833 37.707 2.671 2.96 5.967 3.892 9.186 3.642 5.347 2.513 12.832-.167 13.596-8.142 4.477-46.711 5.636-90.517-4.121-134.715 14.782 7.936 29.376 16.195 44.192 24.616 9.277 5.28 18.482-.091 22.181-9.022.659-1.59 1.25-3.002 1.836-4.414 4.39-1.58 7.904-5.564 7.74-10.72-.081-2.473-.466-4.662-.672-7.016 3.502-10.608 1.609-14.533-2.023-38.18.278 1.773-28.466-44.122-23.657-49.166 15.993-16.796 23.896-39.98 28.724-63.67 4.698-12.951 7.9-27.185 9.331-43.082.308-3.373-.789-5.77-2.528-7.437-1.907-9.838-15.398-13.862-23.747-9.543-13.74 7.1-26.294 14.88-38.611 23.262z"
          fill="#a05a2c"
        />

        <text
          // id="chall-name"
          fill="white"
          fontSize="80"
        >
          <textPath xlinkHref="#chall-name-line">{name}</textPath>
        </text>

        <g>
          <path
            // id="feather"
            d="M2524.936 2591.316c-10.34-11.616-53.17-48.458-56.655-89.448-3.485-40.991 23.39-144.375 12.74-164.453l-18.599 5.454 16.302-20.345-18.159-4.93 21.67-5.014s-28.862-47.443-45.147-51.306c0 0 11.855-7.277 18.203-4.404 6.35 2.873 31.046 44.19 36.776 41.077 5.73-3.114 11.682-6.504 11.682-6.504l-.198 15.149 9.73-1.006-4.973 12.869 15.132 9.78-12.973 1.343s40.767 47.976 48.191 109.99c7.424 62.016-14.607 173.22-33.722 151.748z"
            transform="matrix(.79887 .9206 .9206 -.79887 -3410.88 410.233)"
            fill={isSolved ? theme.colors.secondary : theme.colors.primary}
          />
          <text
            // id="feather-score"
            fill={
              isSolved ? theme.colors.secondaryText : theme.colors.primaryText
            }
            fontSize="80"
          >
            <textPath xlinkHref="#feather-line">{score}</textPath>
          </text>
        </g>
      </Bird>
    </CardWrapper>
  )
}

type ChallState = 'broken' | 'open'

function stateToPathShape(openState: ChallState) {
  switch (openState) {
    case 'broken':
      return 'broken-egg'
    case 'open':
    default:
      return 'bird'
  }
}

type ImageProps = {
  openState: ChallState
}
const Image = styled.image<ImageProps>`
  animation-iteration-count: ${p =>
    p.openState === 'open' ? 1 : 0} !important;
  clip-path: ${p => `url(#${stateToPathShape(p.openState)}-shape)`};
`
const ImageDefaultProps = {
  x: 0,
  y: 0,
  width: 1000,
  height: 1000,
}

const Flower = styled.g``

const WiggleHighlight = keyframes`
  0%, 17.5%, 100% {
    transform: rotateZ(0);
  }
  37.5% {
    transform: translateY(-200px) rotateZ(-15deg);
  }
  50% {
    transform: translateY(-200px) rotateZ(10deg);
  }
  62.5% {
    transform: translateY(-200px) rotateZ(-10deg);
  }
  75% {
    transform: translateY(-200px) rotateZ(6deg);
  }
  87.5% {
    transform: translateY(-200px) rotateZ(-4deg);
  }
`

const CardWrapper = styled.button<SpaceProps & SizeProps>`
  ${space}
  ${size}
  cursor: pointer;
  filter: drop-shadow(-1px 6px 3px rgba(50, 50, 0, 0.5));
  display: flex;
  flex-direction: column;

  :hover ${Image}, :focus ${Image}, :hover ${Flower}, :focus ${Flower} {
    transform-origin: center;
    animation: ${WiggleHighlight} 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97)
      both;
  }
`

const Bird = styled.svg`
  width: 100%;
  height: 100%;
  max-width: ${p => p.theme.sizes[9]};
  max-height: ${p => p.theme.sizes[9]};
  overflow: visible;
`
