import { keyframes, useTheme } from '@emotion/react'
import styled from '@emotion/styled'
import { Challenge, ChallengeScore } from '@sthack/scoreboard-common'
import { size, space } from 'styled-system'
import { Box, BoxProps } from '../Box'
import { categoryToImg } from '../CategoryImg'

type ChallengeCardProps = {
  challenge: Challenge
  score: ChallengeScore
  currentTeam?: string
  onClick: () => void
}
export function ChallengeCard({
  challenge,
  currentTeam,
  size = 10,
  score: { score, achievements },
  onClick,
  ...props
}: ChallengeCardProps & BoxProps) {
  const { name, img, category, isBroken } = challenge
  const isSolved = achievements.some(a => a.teamname === currentTeam)
  const openState: ChallState = isBroken
    ? 'broken'
    : isSolved
      ? 'solved'
      : 'open'

  const theme = useTheme()

  return (
    <CardWrapper
      m="2"
      size={size}
      {...props}
      onClick={onClick}
      type="button"
      openState={openState}
      title={
        isBroken
          ? 'This challenge is currently broken'
          : isSolved
            ? `âœ” Open challenge "${name}"`
            : `Open challenge "${name}"`
      }
    >
      <Svg viewBox="0 0 1000 1000" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <clipPath id="image-shape" clipPathUnits="objectBoundingBox">
            <path
              d="M 0.78755393,0.05613637 C 0.75619881,0.05487788 0.74271765,0.10567746 0.67546703,0.19090868 0.6082171,0.27614065 0.53115276,0.29171135 0.50842036,0.28936011 0.48907944,0.28735914 0.46919855,0.26139944 0.46341009,0.25332498 0.38933899,0.09943072 0.28708601,0.08389453 0.28708601,0.08389453 c 0,0 0.0101399,-0.005004 0.0132164,-0.0087442 0.003075,-0.0037402 -9.7124e-4,-0.0070469 -0.0106222,7.06e-5 -0.009652,0.0071175 -0.00885,0.0041737 -0.00885,0.0041737 0.002147,-0.0091327 -4.8298e-4,-0.01449369 -0.005419,-0.01259695 -0.004937,0.0018975 -2.1009e-4,0.01229021 4.19e-5,0.0139672 2.5034e-4,0.001677 -0.002191,0.0013327 -0.002191,0.0013327 0,0 -0.0334499,-0.01226471 -0.0668486,0.01876343 -0.0270479,0.0251272 -0.0211619,0.0741043 0.0120547,0.0982399 -0.001751,0.001519 -0.002465,0.004287 0.004418,0.008772 -0.001459,0.003297 -0.005034,0.0146654 0.0081,0.0268326 l 0.0236954,-0.0206662 -3.413e-4,0.0156367 0.009372,-0.0128145 c 0.0421933,0.0178627 0.0539472,0.0598498 0.0539472,0.0598498 -0.009894,-0.001482 -0.0132524,-0.005038 -0.0137924,-7.3798e-4 -5.3773e-4,0.0043 0.0130117,0.00373 0.0131654,0.003607 1.5457e-4,-1.2083e-4 -0.004969,0.003796 -0.007462,0.006931 -0.002494,0.003136 1.6783e-4,0.009785 0.001964,0.0115762 0.001796,0.001791 0.009007,-0.007735 0.0112612,-0.00718 0.002255,5.5425e-4 8.8124e-4,0.0188459 8.8124e-4,0.0188459 a 0.00641097,0.00641098 0 0 0 9.2698e-4,2.3847e-4 c -0.00229,0.008649 -0.005543,0.0202582 -0.00973,0.0332849 -0.008645,0.0269047 -0.0682916,0.075197 -0.0682916,0.075197 -0.0205687,-0.00591 -0.0351553,0.001657 -0.0356833,0.005385 -5.2727e-4,0.003727 0.00696,0.003557 0.0116369,0.004041 0.004678,4.8376e-4 0.004512,0.005752 0.004512,0.005752 l -0.0116174,0.0141239 c -0.0961728,0.12771936 -0.0399853,0.21598355 0.0312553,0.2950873 0.0712414,0.0791037 0.24280824,0.10239713 0.30540141,0.11152012 0.0625955,0.009123 0.14241372,0.00921 0.14575276,-0.001375 0.003236,-0.0102547 -0.014451,-0.0266451 -0.0645821,-0.0410976 -0.0501298,-0.014451 -0.0421371,-0.0204329 -0.0421371,-0.0204329 0.0421625,-0.003581 0.14837851,-0.0468659 0.15199194,-0.0689961 0.003613,-0.0221294 -0.0631805,-0.009184 -0.0836508,-0.008039 -0.0204704,0.001144 -0.0541594,0.002103 -0.0551397,-0.001213 -9.8176e-4,-0.003317 0.003664,-0.004348 0.003664,-0.004348 0.0506847,-0.0165037 0.0843693,-0.0423299 0.0759753,-0.0562476 -0.008392,-0.0139162 -0.0237681,-5.6698e-4 -0.0913757,3.8157e-4 -0.0676092,9.4801e-4 -0.0770794,-0.009865 -0.0787309,-0.014007 -0.001652,-0.004142 0.004167,-0.00373 0.004167,-0.00373 0.12776481,-0.006639 0.26593432,-0.09191 0.31125436,-0.12693332 0.0453208,-0.0350241 0.0619369,-0.0996799 0.0517662,-0.10555468 -0.0101722,-0.005874 -0.0420215,0.0223169 -0.0420215,0.0223169 0,0 -0.0499655,0.0305721 -0.0510005,0.0213884 -0.001036,-0.009184 0.004944,-0.009416 0.004944,-0.009416 0.0835766,-0.0401436 0.11801942,-0.2113141 0.0900895,-0.22101083 -0.0279299,-0.009697 -0.11113815,0.10366767 -0.11113815,0.10366767 0,0 -0.01113,0.0116137 -0.0147674,0.0084 -0.00364,-0.003212 0.00297,-0.006784 0.00297,-0.006784 0.0417981,-0.0393599 0.0587922,-0.26396015 0.0274364,-0.26521789 z M 0.26948208,0.11095444 c 6.0152e-4,0 0.001208,3.25e-5 0.001819,9.6e-5 0.00977,0.00101 0.0168719,0.009751 0.0158609,0.0195217 -0.001011,0.00977 -0.00975,0.0168712 -0.0195209,0.0158602 -0.009771,-0.001011 -0.0168719,-0.009751 -0.0158624,-0.0195209 9.4876e-4,-0.00916 0.008689,-0.0159742 0.0177034,-0.015957 z"
              // d="M 80.645166,276.88173 695.56452,274.8656 653.22582,757.39248 106.1828,737.23119 Z"
            />
          </clipPath>
          <path
            id="chall-point-line"
            d="M 807.12366,374.32796 772.17742,707.6613"
            fill="none"
            stroke="none"
          />
          <path
            id="chall-name-line"
            d="M 85.349462,128.36022 649.86559,93.413978 M 94.758065,218.41398 629.03226,209.00538 M 144.48925,892.47312 571.9086,911.96237"
            fill="none"
            stroke="none"
          />
          <clipPath id="img-clip">
            <path d="M82.689 277.846l22.205 460.722 548.674 20.706 39.396-486.604z" />
          </clipPath>
        </defs>

        <BoxPath d="M746.733 5.094L4.483 68.038 3.335 246.384l735.355-5.83zm-43.171 21.98a17.061 18.133 0 0117.06 18.133 17.061 18.133 0 01-17.06 18.135A17.061 18.133 0 01686.5 45.207a17.061 18.133 0 0117.062-18.132zM33.668 84.659a10.562 13.187 0 0110.563 13.188 10.562 13.187 0 01-10.563 13.19 10.562 13.187 0 01-10.562-13.19 10.562 13.187 0 0110.562-13.188zm660.11 77.19a17.061 23.903 0 0117.06 23.905 17.061 23.903 0 01-17.06 23.903 17.061 23.903 0 01-17.062-23.903 17.061 23.903 0 0117.062-23.905zM34.34 191.498a14.624 16.485 0 0114.625 16.484 14.624 16.485 0 01-14.625 16.485 14.624 16.485 0 01-14.624-16.485 14.624 16.485 0 0114.624-16.484z" />
        <BoxPath d="M750.176 4.939L996.35 111.266l-16.25 163.2-241.3-34.618z" />
        <BoxPath2 d="M41.712 250.562l25.187 513.502 622.343 23.078 44.685-542.348z" />
        <BoxPath2 d="M690.867 783.022l181.99-10.716 59.31-501.136-195.803-29.674z" />
        <BoxPath d="M22.212 760.638l20.31 206.884 652.014 28.566 8.516-208.249zm37.684 23.427a11.375 15.66 0 0111.377 15.66 11.375 15.66 0 01-11.377 15.66 11.375 15.66 0 01-11.372-15.659 11.375 15.66 0 0111.372-15.66zm583.847 31.422a14.936 20.982 0 0114.937 20.98 14.936 20.982 0 01-14.937 20.982 14.936 20.982 0 01-14.938-20.982 14.936 20.982 0 0114.938-20.98zM73.398 916.245a11.49 17.485 0 0111.488 17.485 11.49 17.485 0 01-11.488 17.482 11.49 17.485 0 01-11.49-17.482 11.49 17.485 0 0111.49-17.486zm583.345 11.196a13.788 18.65 0 0113.786 18.65 13.788 18.65 0 01-13.786 18.652 13.788 18.65 0 01-13.79-18.65 13.788 18.65 0 0113.79-18.652z" />
        <BoxPath d="M693.326 997.185l227.467-51.092V782.069l-56.06-9.067-163.305 16.484z" />
        <BoxPath
          d="M82.689 277.846l22.205 460.722 548.674 20.706 39.396-486.604z"
          strokeOpacity={0}
        />

        <foreignObject
          x="82.689"
          y="277.846"
          width="610.275"
          height="481.428"
          clipPath={`url(#img-clip)`}
        >
          <Img src={img || categoryToImg(category)} alt={name} />
        </foreignObject>

        <text
          // id="chall-name"
          fill={theme.colors.primaryText}
          fontSize="80"
        >
          <textPath xlinkHref="#chall-name-line">{name}</textPath>
        </text>

        <text
          // id="score"
          fill={theme.colors.primaryText}
          fontSize="80"
        >
          <textPath xlinkHref="#chall-point-line">{score}</textPath>
        </text>
      </Svg>
    </CardWrapper>
  )
}

export type ChallState = 'broken' | 'open' | 'solved'

const Img = styled.img`
  width: 100%;
  height: 100%;
  object-fit: contain;
  object-position: center;
  display: block;
`

const Svg = styled.svg`
  width: 100%;
  height: 100%;
  max-width: ${p => p.theme.sizes[9]};
  max-height: ${p => p.theme.sizes[9]};
  overflow: visible;
`
const BoxPath = styled.path`
  stroke: #3a3a3a;
  stroke-width: 6.627;
  stroke-dasharray: none;
  stroke-opacity: ${p => p.strokeOpacity ?? 1};
`

const BoxPath2 = styled(BoxPath)`
  fill: #6c7a89;
`

const WiggleHighlight = keyframes`
  0%, 17.5%, 100% {
    transform: rotateZ(0);
  }
  37.5% {
    transform: translateY(-10%) rotateZ(-15deg);
  }
  50% {
    transform: translateY(-10%) rotateZ(10deg);
  }
  62.5% {
    transform: translateY(-10%) rotateZ(-10deg);
  }
  75% {
    transform: translateY(-10%) rotateZ(6deg);
  }
  87.5% {
    transform: translateY(-10%) rotateZ(-4deg);
  }
`

type CardWrapperProps = {
  openState: ChallState
}

const CardWrapper = styled(Box)<CardWrapperProps>`
  ${space}
  ${size}
  cursor: pointer;
  filter: drop-shadow(-1px 6px 3px rgba(50, 50, 0, 0.5));
  display: flex;
  flex-direction: column;

  ${BoxPath} {
    fill: ${p =>
      p.openState === 'broken'
        ? '#b0b0b0'
        : p.openState === 'solved'
          ? '#FEE101'
          : '#b0c4de'};
  }

  ${BoxPath2} {
    fill: ${p =>
      p.openState === 'broken'
        ? '#888888'
        : p.openState === 'solved'
          ? '#ddc514'
          : '#6c7a89'};
  }

  :hover ${Svg}, :focus ${Svg} {
    transform-origin: center;
    animation: ${WiggleHighlight} 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97)
      both;
  }
`
